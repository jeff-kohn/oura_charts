name: windows-build
on:
  push:
    paths-ignore:
      - 'README.md'
      - '**/.gitignore'
  pull_request:
    branches:
      - main

env:
  VCPKG_INSTALLATION_ROOT: "${{ github.workspace }}/vcpkg"
  VCPKG_DEFAULT_BINARY_CACHE: "${{ github.workspace }}/vcpkg/bincache"
  VCPKG_DEFAULT_TRIPLET: "x64-linux"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_FEATURE_FLAGS: dependencygraph
  PRESET_NAME: "win-release"
  BUILD_DIR: "build/out/linux-release"

permissions:
  contents: write
  checks: write

jobs:
  windows_build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
        run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
        shell: bash

      - name: 'Set vcvars'
        uses: ilammy/msvc-dev-cmd@v1

      - name: "Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if not already"
        uses: lukka/get-cmake@latest

      - name: "Run Vcpkg"
        uses: lukka/run-vcpkg@v11.5
        with:
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: configure
        run: |
          cmake --preset=$env:PRESET_NAME

      - name: build
        run: |
          cmake --build --preset=$env:PRESET_NAME --target=all

      - name: tests
        run: |
          ctest --preset $env:PRESET_NAME --output-on-failure --output-junit "test_results.xml"

      - name: Code Coverage
        run: |
          choco install OpenCppCoverage -y
          "C:\Program Files\OpenCppCoverage\opencppcoverage.exe" --sources="$env:BUILD_DIR\src" --sources="$env:BUILD_DIR\include" --export_type=cobertura -- $env:BUILD_DIR\tests\tests.exe

      - name: Publlish Coverage
        uses: 5monkeys/cobertura-action@master
        with:
          path: ${{ env.BUILD_DIR }}/*Coverage.xml
          minimum_coverage: 75

      - name: Publish Test Artifacts
        uses: EnricoMi/publish-unit-test-result-action/windows@v2
        if: always()
        with:
            files: |
              ${{ env.BUILD_DIR }}/test_results.xml






