name: "linux-clang-codeql"

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
  schedule:
    - cron: '26 0 * * 5'

jobs:
  analyze:
    name: 'Analyze C++'
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 360
    env:
      VCPKG_INSTALLATION_ROOT: "${{ github.workspace }}/vcpkg"
      VCPKG_DEFAULT_BINARY_CACHE: "${{ github.workspace }}/vcpkg/bincache"
      VCPKG_DEFAULT_TRIPLET: "x64-linux"
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      VCPKG_FEATURE_FLAGS: "dependencygraph"
      DOTNET_ROLL_FORWARD: "latestMajor"
      PRESET_NAME: "linux-debug"
      BUILD_DIR: "build/out/linux-debug"
      REPO_DIR: "${{ github.workspace }}"
      SARIF_DIR: "${{ github.workspace }}/sarif-results"
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    permissions:
      security-events: write
      contents: write
      packages: read

    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt install cppcheck -y
        sudo curl -sSL https://github.com/psastras/sarif-rs/releases/download/clang-tidy-sarif-latest/clang-tidy-sarif-x86_64-unknown-linux-gnu -o /usr/local/bin/clang-tidy-sarif
        sudo chmod +x /usr/local/bin/clang-tidy-sarif
        sudo curl -sSL https://github.com/psastras/sarif-rs/releases/download/sarif-fmt-latest/sarif-fmt-x86_64-unknown-linux-gnu -o /usr/local/bin/sarif-fmt
        sudo chmod +x /usr/local/bin/sarif-fmt
        dotnet tool install --global Sarif.Multitool

    - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
      run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
      shell: bash

      # Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if not already
    - uses: lukka/get-cmake@latest
    - uses: lukka/run-vcpkg@v11.5
      with:
        vcpkgJsonGlob: '**/vcpkg.json'

      # Initializes the CodeQL tools for scanning.
    - name: 'Initialize CodeQL'
      uses: github/codeql-action/init@v3
      with:
        config-file: tools/codeql/config_default.yml
        languages: 'c-cpp'
        build-mode: 'manual'

    - name: 'Run Build'
      shell: bash
      run: |
        echo "$GITHUB_CONTEXT"
        scripts/build_preset.sh --preset $PRESET_NAME --configure --build

    - name: 'Perform CodeQL Analysis'
      uses: github/codeql-action/analyze@v3
      with:
        category: cpp
        output: $SARIF_DIR
        upload: failure-only

    - name: 'Filter vcpkg lib code from codeql results'
      uses: advanced-security/filter-sarif@v1
      with:
        patterns: |
          -**/vcpkg*/**/*
          -**/CMakeFiles/CMakeScratch/**/*
        input: $SARIF_DIR/cpp.sarif
        output: $SARIF_DIR/cpp.sarif

    - name: 'Run clang-tidy and CppCheck'
      run: |
        scripts/build_preset.sh --preset $PRESET_NAME --target code_analysis --build

    - name: 'Convert CppCheck XML to SARIF'
      run: |
        scripts/trim_repo_paths.sh --input-file "$BUILD_DIR/cppcheck_results.xml" --repo-path "$REPO_DIR/" --backup
        $HOME/.dotnet/tools/sarif convert $BUILD_DIR/cppcheck_results.xml --tool CppCheck --output $SARIF_DIR/cpp-cppcheck.sarif

    - name: 'Copy clang-tidy results'
      run: |
         cp $BUILD_DIR/clang_tidy_results.sarif $SARIF_DIR/cpp-clang-tidy.sarif

    - name: 'Upload SARIF'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: $SARIF_DIR
        category: cpp

    - name: Upload loc as a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: $SARIF_DIR
        path: $SARIF_DIR
        retention-days: 1
